{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","components/MainNavLink/MainNavLink.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","cn","sex","to","slug","name","PeopleTable","people","useParams","map","personSlug","born","died","fatherName","motherName","mother","father","PeoplePage","useState","isLoading","setIsLoading","errorMessage","setErrorMessage","setPeople","useEffect","loadedPeople","preparedPeople","find","catch","error","message","finally","length","MainNavLink","text","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.42ff7059.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n      to={`../${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable:FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug: personSlug, sex, born, died,\n            fatherName, motherName, mother, father,\n          } = person;\n\n          return (\n            <tr\n              key={personSlug}\n              data-cy=\"person\"\n              className={cn({ 'has-background-warning': personSlug === slug })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {motherName && mother ? (\n                  <PersonLink person={mother} />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n              <td>\n                {fatherName && father ? (\n                  <PersonLink person={father} />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(loadedPeople => {\n        const preparedPeople = loadedPeople.map(person => ({\n          ...person,\n          mother: loadedPeople.find(({ name }) => name === person.motherName),\n          father: loadedPeople.find(({ name }) => name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch((error: Error) => setErrorMessage(error.message))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {people.length > 0 && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const MainNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={(({ isActive }) => cn(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    ))}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { MainNavLink } from './components/MainNavLink';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <MainNavLink to=\"/\" text=\"Home\" />\n          <MainNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}